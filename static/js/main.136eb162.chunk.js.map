{"version":3,"sources":["utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonInfo.tsx","components/Order.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","components/Navbar.tsx","components/HomePage.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","PeopleFilters","navigate","useNavigate","useState","query","setQuery","getCenturyParams","century","currentCenturies","getAll","includes","filter","item","String","className","get","sex","type","placeholder","onChange","event","newQuery","target","updatedSearchParams","map","cn","centuries","length","Loader","PersonInfo","person","people","location","useLocation","personFather","find","p","name","fatherName","personMother","motherName","pathname","slug","born","died","OrderControl","sortBy","currentSortBy","sortOrder","nextSortOrder","sort","getSearchParams","PeopleTable","queryParams","genderFilter","centuryFilter","Number","queryFilter","filteredPeopleBySex","filteredPeopleByQuery","toLowerCase","filteredPeopleByCentury","Math","floor","currentSortOrder","displayPeople","a","b","comparisonValue","localeCompare","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","setPeople","isLoading","setIsLoading","noPeopleMessage","setNoPeopleMessage","error","setError","useEffect","getPeople","resp","catch","finally","Navbar","role","isActive","HomePage","App","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.136eb162.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport { SearchLink } from './SearchLink';\n\nexport const PeopleFilters = () => {\n  const centuries = [16, 17, 18, 19, 20];\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const [query, setQuery] = useState<string>('');\n\n  const getCenturyParams = (century: string) => {\n    const currentCenturies = searchParams.getAll('centuries');\n\n    return currentCenturies.includes(century)\n      ? currentCenturies.filter(item => item !== century)\n      : [String(century), ...searchParams.getAll('centuries')];\n  };\n\n  const handleQuery: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    const newQuery = event.target.value;\n\n    setQuery(newQuery);\n    const updatedSearchParams = new URLSearchParams(searchParams.toString());\n\n    if (newQuery) {\n      updatedSearchParams.set('query', newQuery);\n    } else {\n      updatedSearchParams.delete('query');\n    }\n\n    navigate(`?${updatedSearchParams.toString()}`);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={searchParams.get('sex') === null ? 'is-active' : ''}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={searchParams.get('sex') === 'm' ? 'is-active' : ''}\n          params={{ sex: 'm' }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={searchParams.get('sex') === 'f' ? 'is-active' : ''}\n          params={{ sex: 'f' }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQuery}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuries.map(century => {\n              return (\n                <SearchLink\n                  key={century}\n                  data-cy=\"century\"\n                  className={cn('button mr-1', {\n                    'is-info': searchParams.getAll('centuries')\n                      .includes(String(century)),\n                  })}\n                  params={{\n                    centuries: getCenturyParams(String(century)),\n                  }}\n                >\n                  {century}\n                </SearchLink>\n              );\n            })}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={cn('button is-success', {\n                'is-outlined': searchParams.getAll('centuries').length > 0,\n              })}\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{ sex: null, query: null, centuries: null }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\n\ntype PersonInfoProps = {\n  person: Person;\n  people: Person[] | undefined;\n};\n\nexport const PersonInfo = ({ person, people }: PersonInfoProps) => {\n  const location = useLocation();\n  const personFather = people?.find(p => p.name === person.fatherName);\n  const personMother = people?.find(p => p.name === person.motherName);\n  const [searchParams] = useSearchParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': location.pathname === `/people/${person.slug}`,\n      })}\n    >\n      <td>\n        <NavLink\n          to={`/people/${person.slug}?${searchParams.toString()}`}\n          className={cn({\n            'has-text-danger': person.sex === 'f',\n          })}\n        >\n          {person.name}\n        </NavLink>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {personMother\n          ? (\n            <NavLink\n              className=\"has-text-danger\"\n              to={`/people/${personMother.slug}?${searchParams.toString()}`}\n            >\n              {personMother.name}\n            </NavLink>\n          ) : person.motherName || '-'}\n\n      </td>\n      <td>\n        {personFather\n          ? (\n            <NavLink\n              to={`/people/${personFather.slug}?${searchParams.toString()}`}\n            >\n              {personFather.name}\n            </NavLink>\n          ) : person.fatherName || '-'}\n\n      </td>\n    </tr>\n  );\n};\n","import cn from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from './SearchLink';\n\ntype OrderControlProps = {\n  sortBy: string | null;\n};\n\nexport const OrderControl = ({ sortBy }: OrderControlProps) => {\n  const [searchParams] = useSearchParams();\n  const currentSortBy = searchParams.get('sort');\n  const sortOrder = searchParams.get('sortOrder');\n\n  const getSearchParams = () => {\n    let nextSortOrder: string | null = 'ASC';\n\n    if (currentSortBy === sortBy) {\n      nextSortOrder = sortOrder === 'ASC' ? 'DESC' : null;\n    }\n\n    return {\n      sort: nextSortOrder === null ? null : sortBy,\n      sortOrder: nextSortOrder,\n    };\n  };\n\n  return (\n    <SearchLink params={getSearchParams()}>\n      <span className=\"icon\">\n        <i\n          className={cn('fas fa-sort', {\n            'fa-sort-up': currentSortBy === sortBy && sortOrder === 'ASC',\n            'fa-sort-down': currentSortBy === sortBy && sortOrder === 'DESC',\n          })}\n        />\n      </span>\n    </SearchLink>\n  );\n};\n","import { useLocation, useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonInfo } from './PersonInfo';\nimport { OrderControl } from './Order';\n\ntype PeopleTableProps = {\n  people: Person[] | undefined;\n};\n\nexport const PeopleTable = ({ people }: PeopleTableProps) => {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const genderFilter = queryParams.get('sex');\n  const centuryFilter = queryParams.getAll('centuries').map(Number);\n  const queryFilter = queryParams.get('query');\n  const [searchParams] = useSearchParams();\n\n  const filteredPeopleBySex = genderFilter\n    ? people?.filter(person => person.sex === genderFilter)\n    : people;\n\n  const filteredPeopleByQuery = queryFilter\n    ? filteredPeopleBySex?.filter(person => {\n      return person.name.toLowerCase().includes(queryFilter.toLowerCase())\n        || person.motherName?.toLowerCase().includes(queryFilter.toLowerCase())\n        || person.fatherName?.toLowerCase().includes(queryFilter.toLowerCase());\n    })\n    : filteredPeopleBySex;\n\n  const filteredPeopleByCentury = centuryFilter.length > 0\n    ? filteredPeopleByQuery?.filter(person => (\n      (centuryFilter).includes(\n        Math.floor((Number(person.born) / 100) + 1),\n      )))\n    : filteredPeopleByQuery;\n\n  const currentSortBy = searchParams.get('sort');\n  const currentSortOrder = searchParams.get('sortOrder');\n  const displayPeople = filteredPeopleByCentury;\n\n  if (currentSortBy) {\n    const sortFunction = (a: Person, b: Person) => {\n      const comparisonValue = currentSortOrder === 'ASC' ? 1 : -1;\n\n      switch (currentSortBy) {\n        case 'name':\n          return comparisonValue * a.name.localeCompare(b.name);\n        case 'sex':\n          return comparisonValue * a.sex.localeCompare(b.sex);\n        case 'born':\n          return comparisonValue * (a.born - b.born);\n        case 'died':\n          return comparisonValue * (a.died - b.died);\n        default:\n          return 0;\n      }\n    };\n\n    displayPeople?.sort(sortFunction);\n  }\n\n  return (\n    <>\n      {displayPeople?.length !== 0\n        && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    Name\n                    <OrderControl sortBy=\"name\" />\n                  </span>\n                </th>\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    Sex\n                    <OrderControl sortBy=\"sex\" />\n                  </span>\n                </th>\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    Born\n                    <OrderControl sortBy=\"born\" />\n                  </span>\n                </th>\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    Died\n                    <OrderControl sortBy=\"died\" />\n                  </span>\n                </th>\n\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {displayPeople?.map((person) => {\n                return (\n                  <PersonInfo\n                    key={person.slug}\n                    person={person}\n                    people={people}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      {displayPeople?.length === 0\n        && <p>There are no people matching the current search criteria</p>}\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>();\n  const [isLoading, setIsLoading] = useState(true);\n  const [noPeopleMessage, setNoPeopleMessage] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then((resp) => {\n        setPeople(resp);\n\n        if (resp.length === 0) {\n          setNoPeopleMessage(true);\n        }\n      })\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && <PeopleFilters />}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {error\n                && (\n                  <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n                )}\n\n              {noPeopleMessage\n                && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n\n              {!isLoading && <PeopleTable people={people} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            aria-current=\"page\"\n            to=\"/people\"\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (<h1 className=\"title\">Home Page</h1>);\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" />}\n            />\n            <Route\n              path=\"/people\"\n              element={<PeoplePage />}\n            />\n            <Route\n              path=\"/people/:personSlug?\"\n              element={<PeoplePage />}\n            />\n            <Route\n              path=\"/*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}